# Common fragments

fragment ManuscriptIdentifier on ManuscriptIdentifier {
  identifierType
  identifier
}

# /xmlEditor

fragment ManuscriptLanguage on ManuscriptLanguage {
  name
  abbreviation
}

query AllManuscriptLanguages {
  manuscriptLanguages {
    ...ManuscriptLanguage
  }
}

# /register
mutation Register($userInput: UserInput!) {
  register(userInput: $userInput)
}

# /login

mutation Login($username: String!, $password: String!) {
  login(username: $username, password: $password)
}

# /

mutation AppointReviewerForReleasedTransliteration($mainIdentifier: String!, $reviewer: String!) {
  executiveEditor {
    appointReviewerForReleasedTransliteration(mainIdentifier: $mainIdentifier, reviewer: $reviewer)
  }
}

fragment ManuscriptBasicData on ManuscriptMetaData {
  mainIdentifier {
    ...ManuscriptIdentifier
  }
  status
  creatorUsername
}

query Index($page: Int! = 0) {
  manuscriptCount
  allManuscripts(page: $page) {
    ...ManuscriptBasicData
  }
  myManuscripts
  reviewerQueries {
    reviewAppointments
  }
  executiveEditorQueries {
    releasedTransliterationsWithoutAppointedReviewer
    allReviewers
  }
}

# /createManuscript

mutation CreateManuscript($manuscriptMetaData : ManuscriptMetaDataInput) {
  me {
    createManuscript(values: $manuscriptMetaData)
  }
}

# /manuscripts/:id

fragment ManuscriptMetaData on ManuscriptMetaData {
  mainIdentifier {
    ...ManuscriptIdentifier
  }
  otherIdentifiers {
    ...ManuscriptIdentifier
  }
  bibliography
  cthClassification
  palaeographicClassification
  palaeographicClassificationSure
  provenance
  creatorUsername
  pictureUrls
  provisionalTransliteration
  transliterationReleased
}

query Manuscript($mainIdentifier: String!) {
  manuscript(mainIdentifier: $mainIdentifier) {
    ...ManuscriptMetaData
  }
}

mutation ReleaseTransliteration($mainIdentifier: String!) {
  me {
    manuscript(mainIdentifier: $mainIdentifier) {
      releaseTransliteration
    }
  }
}

# /manuscripts/:id/uploadPictures

fragment ManuscriptIdentWithCreator on ManuscriptMetaData {
  mainIdentifier {
    ...ManuscriptIdentifier
  }
  pictureUrls
  creatorUsername
}

query UploadPictures($mainIdentifier: String!) {
  manuscript(mainIdentifier: $mainIdentifier) {
    ...ManuscriptIdentWithCreator
  }
}

# /manuscripts/:id/transliterationInput

query TransliterationInput($mainIdentifier: String!) {
  manuscript(mainIdentifier: $mainIdentifier) {
    mainIdentifier {
      ...ManuscriptIdentifier
    }
  }
}

mutation uploadTransliteration($mainIdentifier: String!, $input: String!) {
  me {
    manuscript(mainIdentifier: $mainIdentifier) {
      updateTransliteration(input: $input)
    }
  }
}

# /manuscripts/:id/reviewTransliteration

query ReviewTransliteration($mainIdentifier: String!) {
  reviewerQueries {
    transliterationReview(mainIdentifier: $mainIdentifier)
  }
}

mutation SubmitTransliterationReview($mainIdentifier: String!, $review: String!) {
  reviewerMutations {
    submitTransliterationReview(mainIdentifier: $mainIdentifier, review: $review)
  }
}

# /userManagement

fragment User on User {
  username
  name
  affiliation
  email
  rights
}

query UsersOverview($page: Int!) {
  executiveEditorQueries {
    userCount
    users(page: $page) {
      ...User
    }
  }
}

mutation UpdateUserRights($username: String!, $newRights: Rights!) {
  executiveEditor {
    updateUserRights(username: $username, newRights: $newRights)
  }
}